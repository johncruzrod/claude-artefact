import React, { useState, useEffect } from 'react';
import { LineChart, Line, AreaChart, Area, BarChart, Bar, PieChart, Pie, RadarChart, Radar, PolarGrid, PolarAngleAxis, PolarRadiusAxis, ScatterChart, Scatter, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';
import _ from 'lodash';
const CosmicDashboard = () => {
  const [animationActive, setAnimationActive] = useState(true);
  const [randomizedData, setRandomizedData] = useState([]);
  const [moonPhase, setMoonPhase] = useState(0);
  const [avocadoMood, setAvocadoMood] = useState('Contemplative');
  
  // Avocado moods
  const moods = [
    'Jubilant', 'Cosmic', 'Transcendent', 'Bewildered', 
    'Contemplative', 'Ethereal', 'Quantum', 'Hypersonic'
  ];
  
  // Random data generator
  useEffect(() => {
    generateRandomData();
    
    // Update moon phase and avocado mood every 5 seconds
    const interval = setInterval(() => {
      setMoonPhase(prev => (prev + 1) % 8);
      setAvocadoMood(moods[Math.floor(Math.random() * moods.length)]);
      generateRandomData();
    }, 5000);
    
    return () => clearInterval(interval);
  }, []);
  
  const generateRandomData = () => {
    // Generate cosmic avocado ripeness data
    const newData = [];
    for (let i = 0; i < 12; i++) {
      newData.push({
        month: `Month ${i+1}`,
        cosmic: Math.floor(Math.random() * 1000),
        ripeness: Math.floor(Math.random() * 100),
        moonInfluence: Math.floor(Math.random() * 80) + 20,
        quantumFluctuations: Math.floor(Math.random() * 50),
        telepathicStrength: Math.floor(Math.random() * 100)
      });
    }
    setRandomizedData(newData);
  };
  // Cosmic avocado varieties data for radar chart
  const avocadoVarieties = [
    { variety: 'Hass Nebula', taste: 90, telepathy: 60, durability: 70, cosmicrays: 40, antimatter: 30 },
    { variety: 'Quantum Bacon', taste: 60, telepathy: 90, durability: 50, cosmicrays: 70, antimatter: 80 },
    { variety: 'Galactic Green', taste: 70, telepathy: 40, durability: 90, cosmicrays: 60, antimatter: 50 },
    { variety: 'Void Pear', taste: 40, telepathy: 70, durability: 60, cosmicrays: 90, antimatter: 60 },
    { variety: 'Pulsar Smooth', taste: 50, telepathy: 80, durability: 40, cosmicrays: 50, antimatter: 90 },
  ];
  
  // Planet distribution data
  const planetData = [
    { name: 'Mercury', avocados: 1235 },
    { name: 'Venus', avocados: 2184 },
    { name: 'Earth', avocados: 5839 },
    { name: 'Mars', avocados: 3573 },
    { name: 'Jupiter', avocados: 10384 },
    { name: 'Saturn', avocados: 8294 },
    { name: 'Uranus', avocados: 4629 },
    { name: 'Neptune', avocados: 2473 },
  ];
  
  // Scatter plot data for dimension correlations
  const dimensionData = [];
  for (let i = 0; i < 50; i++) {
    dimensionData.push({
      x: Math.floor(Math.random() * 100),
      y: Math.floor(Math.random() * 100),
      z: Math.floor(Math.random() * 40) + 5,
      dimension: Math.random() > 0.5 ? 'Alpha' : Math.random() > 0.5 ? 'Beta' : 'Gamma'
    });
  }
  
  // Anomaly data for bar chart
  const anomalyData = [
    { type: 'Telepathic', count: 47 },
    { type: 'Gravitational', count: 32 },
    { type: 'Temporal', count: 78 },
    { type: 'Quantum', count: 63 },
    { type: 'Interdimensional', count: 52 },
  ];
  
  const COLORS = [
    '#FF6AD5', '#C774E8', '#AD8CFF', '#8795E8', '#94D0FF', 
    '#72EFDD', '#5DD39E', '#BFEA7C', '#FFF27B', '#FFC759', 
    '#FF8243', '#FF6B6B'
  ];
  
  const avocadoEmojis = ['🥑', '✨', '🌌', '👽', '🚀', '🛸', '🌟', '🔭', '🌠', '🪐', '🌈', '💫'];
  
  // Generate random emoji
  const getRandomEmoji = () => {
    return avocadoEmojis[Math.floor(Math.random() * avocadoEmojis.length)];
  };
  return (
    <div className="bg-black text-white min-h-screen p-8 font-mono relative overflow-hidden">
      {/* Header */}
      <div className="relative z-10">
        <div className="flex justify-between items-center mb-8 bg-gradient-to-r from-purple-900 to-blue-900 p-6 rounded-lg shadow-lg border border-purple-500">
          <div className="flex items-center">
            <div className="text-4xl mr-4 animate-bounce">{getRandomEmoji()}</div>
            <div>
              <h1 className="text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-pink-400 to-purple-600">
                Cosmic Avocado Tracking System 3000
              </h1>
              <p className="text-blue-300">Monitoring avocados across the multiverse since 2157</p>
            </div>
          </div>
          <div className="flex items-center space-x-4">
            <div className="text-right">
              <div className="text-xl font-bold text-pink-300">Universal Date</div>
              <div className="text-green-300">42.195.77.3 / Stardate 9853.4</div>
            </div>
            <div className="h-12 w-12 rounded-full bg-gradient-to-br from-purple-400 to-pink-600 flex items-center justify-center text-2xl animate-spin">
              {moonPhase % 2 === 0 ? '🥑' : '🌌'}
            </div>
          </div>
        </div>
      </div>
      
      {/* Status Panel */}
      <div className="grid grid-cols-4 gap-4 mb-8 relative z-10">
        <div className="bg-gradient-to-br from-indigo-900/80 to-purple-900/80 p-4 rounded-lg border border-indigo-500 backdrop-blur-sm shadow-lg">
          <h3 className="text-blue-300 text-lg mb-2">Cosmic Avocados</h3>
          <div className="text-4xl font-bold text-green-400">
            {(Math.floor(Math.random() * 900000) + 100000).toLocaleString()}
          </div>
          <div className="text-pink-300 text-sm">
            +{Math.floor(Math.random() * 1000)} in the last hour
          </div>
        </div>
        
        <div className="bg-gradient-to-br from-blue-900/80 to-cyan-900/80 p-4 rounded-lg border border-blue-500 backdrop-blur-sm shadow-lg">
          <h3 className="text-blue-300 text-lg mb-2">Alternate Dimensions</h3>
          <div className="text-4xl font-bold text-cyan-400">
            {Math.floor(Math.random() * 100) + 42}
          </div>
          <div className="text-pink-300 text-sm">
            {Math.floor(Math.random() * 5)} new dimensions discovered
          </div>
        </div>
        
        <div className="bg-gradient-to-br from-green-900/80 to-emerald-900/80 p-4 rounded-lg border border-green-500 backdrop-blur-sm shadow-lg">
          <h3 className="text-blue-300 text-lg mb-2">Ripeness Factor</h3>
          <div className="text-4xl font-bold text-emerald-400">
            {Math.floor(Math.random() * 100)}%
          </div>
          <div className="text-pink-300 text-sm">
            Optimal quantum ripeness achieved
          </div>
        </div>
        
        <div className="bg-gradient-to-br from-pink-900/80 to-rose-900/80 p-4 rounded-lg border border-pink-500 backdrop-blur-sm shadow-lg">
          <h3 className="text-blue-300 text-lg mb-2">Avocado Mood</h3>
          <div className="text-4xl font-bold text-rose-400">
            {avocadoMood}
          </div>
          <div className="text-pink-300 text-sm">
            Telepathic resonance: {Math.floor(Math.random() * 100)}%
          </div>
        </div>
      </div>
      
      {/* Main dashboard grid */}
      <div className="grid grid-cols-12 gap-6 relative z-10">
        {/* Ripeness over time chart */}
        <div className="col-span-8 bg-gradient-to-br from-blue-900/70 to-purple-900/70 p-4 rounded-lg border border-indigo-500 backdrop-blur-sm shadow-lg">
          <h3 className="text-pink-300 text-lg mb-4">Cosmic Ripeness Fluctuations</h3>
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <AreaChart
                data={randomizedData}
                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}
              >
                <defs>
                  <linearGradient id="colorCosmic" x1="0" y1="0" x2="0" y2="1">
                    <stop offset="5%" stopColor="#8884d8" stopOpacity={0.8} />
                    <stop offset="95%" stopColor="#8884d8" stopOpacity={0} />
                  </linearGradient>
                  <linearGradient id="colorRipeness" x1="0" y1="0" x2="0" y2="1">
                    <stop offset="5%" stopColor="#82ca9d" stopOpacity={0.8} />
                    <stop offset="95%" stopColor="#82ca9d" stopOpacity={0} />
                  </linearGradient>
                </defs>
                <CartesianGrid strokeDasharray="3 3" stroke="#444" />
                <XAxis dataKey="month" stroke="#8884d8" />
                <YAxis stroke="#8884d8" />
                <Tooltip contentStyle={{ backgroundColor: 'rgba(20, 20, 40, 0.9)', borderColor: '#8884d8' }} />
                <Legend />
                <Area 
                  type="monotone" 
                  dataKey="cosmic" 
                  name="Cosmic Energy" 
                  stroke="#8884d8" 
                  fillOpacity={1} 
                  fill="url(#colorCosmic)" 
                  isAnimationActive={animationActive}
                />
                <Area 
                  type="monotone" 
                  dataKey="ripeness" 
                  name="Ripeness Factor" 
                  stroke="#82ca9d" 
                  fillOpacity={1} 
                  fill="url(#colorRipeness)" 
                  isAnimationActive={animationActive}
                />
              </AreaChart>
            </ResponsiveContainer>
          </div>
        </div>
        
        {/* Variety radar chart */}
        <div className="col-span-4 bg-gradient-to-br from-pink-900/70 to-purple-900/70 p-4 rounded-lg border border-pink-500 backdrop-blur-sm shadow-lg">
          <h3 className="text-pink-300 text-lg mb-4">Avocado Varieties Comparison</h3>
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <RadarChart outerRadius={90} data={avocadoVarieties}>
                <PolarGrid stroke="#666" />
                <PolarAngleAxis dataKey="variety" stroke="#fff" />
                <PolarRadiusAxis angle={30} domain={[0, 100]} stroke="#fff" />
                <Radar 
                  name="Taste" 
                  dataKey="taste" 
                  stroke="#FF6AD5" 
                  fill="#FF6AD5" 
                  fillOpacity={0.5} 
                  isAnimationActive={animationActive}
                />
                <Radar 
                  name="Telepathy" 
                  dataKey="telepathy" 
                  stroke="#94D0FF" 
                  fill="#94D0FF" 
                  fillOpacity={0.5} 
                  isAnimationActive={animationActive}
                />
                <Radar 
                  name="Cosmic Rays" 
                  dataKey="cosmicrays" 
                  stroke="#FFC759" 
                  fill="#FFC759" 
                  fillOpacity={0.5} 
                  isAnimationActive={animationActive}
                />
                <Legend />
              </RadarChart>
            </ResponsiveContainer>
          </div>
        </div>
        
        {/* Distribution by planet */}
        <div className="col-span-4 bg-gradient-to-br from-indigo-900/70 to-blue-900/70 p-4 rounded-lg border border-blue-500 backdrop-blur-sm shadow-lg">
          <h3 className="text-pink-300 text-lg mb-4">Avocado Distribution by Planet</h3>
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <PieChart>
                <Pie
                  data={planetData}
                  cx="50%"
                  cy="50%"
                  innerRadius={60}
                  outerRadius={80}
                  paddingAngle={5}
                  dataKey="avocados"
                  isAnimationActive={animationActive}
                  label
                >
                  {planetData.map((entry, index) => (
                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                  ))}
                </Pie>
                <Tooltip contentStyle={{ backgroundColor: 'rgba(20, 20, 40, 0.9)', borderColor: '#8884d8' }} />
                <Legend />
              </PieChart>
            </ResponsiveContainer>
          </div>
        </div>
        
        {/* Anomaly Detection */}
        <div className="col-span-4 bg-gradient-to-br from-purple-900/70 to-fuchsia-900/70 p-4 rounded-lg border border-purple-500 backdrop-blur-sm shadow-lg">
          <h3 className="text-pink-300 text-lg mb-4">Anomaly Detection</h3>
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <BarChart
                data={anomalyData}
                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}
              >
                <CartesianGrid strokeDasharray="3 3" stroke="#444" />
                <XAxis dataKey="type" stroke="#fff" />
                <YAxis stroke="#fff" />
                <Tooltip contentStyle={{ backgroundColor: 'rgba(20, 20, 40, 0.9)', borderColor: '#8884d8' }} />
                <Legend />
                <Bar 
                  dataKey="count" 
                  name="Anomalies Detected" 
                  isAnimationActive={animationActive}
                >
                  {anomalyData.map((entry, index) => (
                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                  ))}
                </Bar>
              </BarChart>
            </ResponsiveContainer>
          </div>
        </div>
        
        {/* Dimension Correlation */}
        <div className="col-span-4 bg-gradient-to-br from-cyan-900/70 to-teal-900/70 p-4 rounded-lg border border-cyan-500 backdrop-blur-sm shadow-lg">
          <h3 className="text-pink-300 text-lg mb-4">Dimensional Correlations</h3>
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <ScatterChart
                margin={{ top: 20, right: 20, bottom: 20, left: 20 }}
              >
                <CartesianGrid strokeDasharray="3 3" stroke="#444" />
                <XAxis type="number" dataKey="x" name="Telepathic Energy" stroke="#fff" />
                <YAxis type="number" dataKey="y" name="Quantum Alignment" stroke="#fff" />
                <Tooltip 
                  cursor={{ strokeDasharray: '3 3' }} 
                  contentStyle={{ backgroundColor: 'rgba(20, 20, 40, 0.9)', borderColor: '#8884d8' }}
                />
                <Legend />
                <Scatter 
                  name="Alpha Dimension" 
                  data={dimensionData.filter(d => d.dimension === 'Alpha')} 
                  fill="#FF6AD5" 
                  isAnimationActive={animationActive}
                />
                <Scatter 
                  name="Beta Dimension" 
                  data={dimensionData.filter(d => d.dimension === 'Beta')} 
                  fill="#72EFDD" 
                  isAnimationActive={animationActive}
                />
                <Scatter 
                  name="Gamma Dimension" 
                  data={dimensionData.filter(d => d.dimension === 'Gamma')} 
                  fill="#FFC759" 
                  isAnimationActive={animationActive}
                />
              </ScatterChart>
            </ResponsiveContainer>
          </div>
        </div>
        
        {/* Telepathic Fluctuations */}
        <div className="col-span-8 bg-gradient-to-br from-violet-900/70 to-indigo-900/70 p-4 rounded-lg border border-violet-500 backdrop-blur-sm shadow-lg">
          <h3 className="text-pink-300 text-lg mb-4">Quantum Telepathic Fluctuations</h3>
          <div className="grid grid-cols-2 gap-4">
            <div className="flex-1">
              <div className="h-64">
                <ResponsiveContainer width="100%" height="100%">
                  <LineChart
                    data={randomizedData}
                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}
                  >
                    <CartesianGrid strokeDasharray="3 3" stroke="#444" />
                    <XAxis dataKey="month" stroke="#fff" />
                    <YAxis stroke="#fff" />
                    <Tooltip contentStyle={{ backgroundColor: 'rgba(20, 20, 40, 0.9)', borderColor: '#8884d8' }} />
                    <Legend />
                    <Line 
                      type="monotone" 
                      dataKey="moonInfluence" 
                      name="Moon Influence" 
                      stroke="#AD8CFF" 
                      activeDot={{ r: 8 }} 
                      isAnimationActive={animationActive}
                      strokeWidth={2}
                    />
                    <Line 
                      type="monotone" 
                      dataKey="telepathicStrength" 
                      name="Telepathic Strength" 
                      stroke="#FF8243" 
                      isAnimationActive={animationActive}
                      strokeWidth={2}
                    />
                  </LineChart>
                </ResponsiveContainer>
              </div>
            </div>
            <div className="flex-1">
              <div className="h-64">
                <ResponsiveContainer width="100%" height="100%">
                  <LineChart
                    data={randomizedData}
                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}
                  >
                    <CartesianGrid strokeDasharray="3 3" stroke="#444" />
                    <XAxis dataKey="month" stroke="#fff" />
                    <YAxis stroke="#fff" />
                    <Tooltip contentStyle={{ backgroundColor: 'rgba(20, 20, 40, 0.9)', borderColor: '#8884d8' }} />
                    <Legend />
                    <Line 
                      type="monotone" 
                      dataKey="quantumFluctuations" 
                      name="Quantum Fluctuations" 
                      stroke="#5DD39E" 
                      isAnimationActive={animationActive}
                      strokeWidth={2}
                    />
                    <Line 
                      type="monotone" 
                      dataKey="ripeness" 
                      name="Ripeness" 
                      stroke="#FFC759" 
                      isAnimationActive={animationActive}
                      strokeWidth={2}
                    />
                  </LineChart>
                </ResponsiveContainer>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      {/* Floating badges */}
      <div className="fixed bottom-10 right-10 animate-bounce z-20">
        <div className="bg-gradient-to-r from-purple-600 to-pink-600 text-white p-2 rounded-full flex items-center justify-center shadow-lg">
          <span className="text-2xl">🥑</span>
          <span className="ml-2 font-bold">Cosmic Level: EXTREME</span>
        </div>
      </div>
      
      <div className="fixed top-20 left-10 animate-pulse z-20">
        <div className="bg-gradient-to-r from-blue-600 to-cyan-600 text-white p-2 rounded-full flex items-center justify-center shadow-lg">
          <span className="text-2xl">🛸</span>
          <span className="ml-2 font-bold">Alien Harvesting: {Math.floor(Math.random() * 100)}%</span>
        </div>
      </div>
      
      {/* Control panel */}
      <div className="mt-8 bg-gradient-to-r from-black to-purple-900/70 p-4 rounded-lg border border-purple-500 backdrop-blur-sm shadow-lg relative z-10">
        <div className="flex justify-between items-center">
          <div className="flex items-center space-x-4">
            <button 
              className="bg-gradient-to-br from-pink-500 to-purple-600 text-white px-4 py-2 rounded-lg shadow-lg hover:from-pink-600 hover:to-purple-700 transition-all"
              onClick={() => setAnimationActive(!animationActive)}
            >
              {animationActive ? 'Disable' : 'Enable'} Animations
            </button>
            <button 
              className="bg-gradient-to-br from-blue-500 to-cyan-600 text-white px-4 py-2 rounded-lg shadow-lg hover:from-blue-600 hover:to-cyan-700 transition-all"
              onClick={generateRandomData}
            >
              Regenerate Data
            </button>
          </div>
          <div className="flex items-center space-x-2">
            <div className="w-3 h-3 rounded-full bg-green-400 animate-pulse"></div>
            <div className="text-green-400">System Operational: Quantum Link Established</div>
          </div>
        </div>
      </div>
      
      {/* Footer */}
      <div className="mt-8 text-center text-blue-400 relative z-10">
        <p>Intergalactic Avocado Monitoring Services Ltd. • Universe B-7291 • Stardate 9853.4</p>
        <p className="text-xs mt-2 text-purple-400">Warning: Avocados may exhibit telepathic properties when properly ripened</p>
      </div>
    </div>
  );
};
export default CosmicDashboard;